# Currently there is no standard way of importing files in GraphQL
# Prisma uses GraphQL import which imports through a comment (weird)

# Import all types and inputs from prisma.graphql file
# If the type does not exist in this file, will look in the prisma.graphql file
# Below is the import of the prisma.graphql file
# import * from './generated/prisma.graphql'

# Create a custom type not tied to your backend
type SuccessMessage {
  message: String
}

type Mutation {
  createItem(title: String, description: String, price: Int, image: String, largeImage: String): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): Item
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
  addToCart(id: ID!): CartItem
  removeFromCart(id: ID!): CartItem
}

type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  users: [User]! # The array itself if required, but may be empty. Hence User itself is not required
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]! # Take permission definition from imported prisma.graphql
  cart: [CartItem!]!
}